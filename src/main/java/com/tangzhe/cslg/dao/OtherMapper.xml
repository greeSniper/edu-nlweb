<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tangzhe.cslg.dao.OtherMapper" >
  <resultMap id="BaseResultMap" type="com.tangzhe.cslg.entity.Other" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="course_id" property="courseId" jdbcType="VARCHAR" />
    <result column="point_id" property="pointId" jdbcType="VARCHAR" />
    <result column="point_name" property="pointName" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="DOUBLE" />
    <result column="quanzhong" property="quanzhong" jdbcType="DOUBLE" />
    <result column="other_name" property="otherName" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="other_type" property="otherType" jdbcType="INTEGER" />
    <result column="teacher_id" property="teacherId" jdbcType="VARCHAR" />
    <result column="teacher_name" property="teacherName" jdbcType="VARCHAR" />
    <result column="mid" property="mid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, course_id, point_id, point_name, score, quanzhong, other_name, content, other_type, 
    teacher_id, teacher_name, mid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from other
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from other
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.tangzhe.cslg.entity.Other" >
    insert into other (id, course_id, point_id, 
      point_name, score, quanzhong, 
      other_name, content, other_type, 
      teacher_id, teacher_name, mid
      )
    values (#{id,jdbcType=VARCHAR}, #{courseId,jdbcType=VARCHAR}, #{pointId,jdbcType=VARCHAR}, 
      #{pointName,jdbcType=VARCHAR}, #{score,jdbcType=DOUBLE}, #{quanzhong,jdbcType=DOUBLE}, 
      #{otherName,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{otherType,jdbcType=INTEGER}, 
      #{teacherId,jdbcType=VARCHAR}, #{teacherName,jdbcType=VARCHAR}, #{mid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tangzhe.cslg.entity.Other" >
    insert into other
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="pointId != null" >
        point_id,
      </if>
      <if test="pointName != null" >
        point_name,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="quanzhong != null" >
        quanzhong,
      </if>
      <if test="otherName != null" >
        other_name,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="otherType != null" >
        other_type,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="teacherName != null" >
        teacher_name,
      </if>
      <if test="mid != null" >
        mid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="pointId != null" >
        #{pointId,jdbcType=VARCHAR},
      </if>
      <if test="pointName != null" >
        #{pointName,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=DOUBLE},
      </if>
      <if test="quanzhong != null" >
        #{quanzhong,jdbcType=DOUBLE},
      </if>
      <if test="otherName != null" >
        #{otherName,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="otherType != null" >
        #{otherType,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="teacherName != null" >
        #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="mid != null" >
        #{mid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tangzhe.cslg.entity.Other" >
    update other
    <set >
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="pointId != null" >
        point_id = #{pointId,jdbcType=VARCHAR},
      </if>
      <if test="pointName != null" >
        point_name = #{pointName,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=DOUBLE},
      </if>
      <if test="quanzhong != null" >
        quanzhong = #{quanzhong,jdbcType=DOUBLE},
      </if>
      <if test="otherName != null" >
        other_name = #{otherName,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="otherType != null" >
        other_type = #{otherType,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="teacherName != null" >
        teacher_name = #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="mid != null" >
        mid = #{mid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tangzhe.cslg.entity.Other" >
    update other
    set course_id = #{courseId,jdbcType=VARCHAR},
      point_id = #{pointId,jdbcType=VARCHAR},
      point_name = #{pointName,jdbcType=VARCHAR},
      score = #{score,jdbcType=DOUBLE},
      quanzhong = #{quanzhong,jdbcType=DOUBLE},
      other_name = #{otherName,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      other_type = #{otherType,jdbcType=INTEGER},
      teacher_id = #{teacherId,jdbcType=VARCHAR},
      teacher_name = #{teacherName,jdbcType=VARCHAR},
      mid = #{mid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="findCountByTeacherId" parameterType="string" resultType="java.lang.Integer">
    select count(*)
    from other
    where teacher_id = #{teacherId}
  </select>

  <select id="findPageByTeacherId" resultType="com.tangzhe.cslg.pojo.OtherVo">
    SELECT o.id, o.point_name pointName, o.score,
          o.quanzhong, o.other_name otherName,
          o.content, o.other_type otherType,
          o.teacher_name teacherName, c.course_name courseName,
          o.course_id courseId, o.point_id pointId
    FROM other o
    LEFT JOIN course c ON c.id = o.course_id
    where o.teacher_id = #{teacherId}
    ORDER BY other_type, other_name
    LIMIT #{startRow}, #{pageSize}
  </select>

  <select id="findOtherListByCourseIdAndTeacherId" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM other
    WHERE course_id = #{courseId}
    AND teacher_id = #{teacherId}
    ORDER BY other_type, other_name
  </select>

  <select id="findOtherByCourseIdAndTeacherIdAndOtherName" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM other
    WHERE course_id = #{courseId}
    AND teacher_id = #{teacherId}
    And other_name = #{otherName}
  </select>

  <insert id="insertStuOther" parameterType="com.tangzhe.cslg.pojo.StuExpVo" >
    insert into stu_other
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="stuId != null" >
        stu_id,
      </if>
      <if test="otherId != null" >
        other_id,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="quanzhong != null" >
        quanzhong,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="stuId != null" >
        #{stuId,jdbcType=VARCHAR},
      </if>
      <if test="otherId != null" >
        #{otherId,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=DOUBLE},
      </if>
      <if test="quanzhong != null" >
        #{quanzhong,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>

  <select id="findOtherListByMidAndCourseIdAndPointIdAndTeacherId" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM other
    WHERE mid = #{mid}
    AND course_id = #{courseId}
    AND point_id = #{pointId}
    AND teacher_id = #{teacherId}
    ORDER BY other_type, other_name
  </select>

</mapper>