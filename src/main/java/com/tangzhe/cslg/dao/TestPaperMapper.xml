<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tangzhe.cslg.dao.TestPaperMapper" >
  <resultMap id="BaseResultMap" type="com.tangzhe.cslg.entity.TestPaper" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="course_id" property="courseId" jdbcType="VARCHAR" />
    <result column="major_id" property="majorId" jdbcType="VARCHAR" />
    <result column="course_name" property="courseName" jdbcType="VARCHAR" />
    <result column="tp_name" property="tpName" jdbcType="VARCHAR" />
    <result column="tp_score" property="tpScore" jdbcType="DOUBLE" />
    <result column="teacher_id" property="teacherId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="DATE" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="DATE" />
    <result column="major_name" property="majorName" jdbcType="VARCHAR" />
    <result column="teacher_name" property="teacherName" jdbcType="VARCHAR" />
    <result column="mid" property="mid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, course_id, major_id, course_name, tp_name, tp_score, teacher_id, create_time, 
    state, update_time, major_name, teacher_name, mid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from test_paper
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from test_paper
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.tangzhe.cslg.entity.TestPaper" >
    insert into test_paper (id, course_id, major_id, 
      course_name, tp_name, tp_score, 
      teacher_id, create_time, state, 
      update_time, major_name, teacher_name, mid
      )
    values (#{id,jdbcType=VARCHAR}, #{courseId,jdbcType=VARCHAR}, #{majorId,jdbcType=VARCHAR}, 
      #{courseName,jdbcType=VARCHAR}, #{tpName,jdbcType=VARCHAR}, #{tpScore,jdbcType=DOUBLE}, 
      #{teacherId,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE}, #{state,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=DATE}, #{majorName,jdbcType=VARCHAR}, #{teacherName,jdbcType=VARCHAR},
      #{mid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tangzhe.cslg.entity.TestPaper" >
    insert into test_paper
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="majorId != null" >
        major_id,
      </if>
      <if test="courseName != null" >
        course_name,
      </if>
      <if test="tpName != null" >
        tp_name,
      </if>
      <if test="tpScore != null" >
        tp_score,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="majorName != null" >
        major_name,
      </if>
      <if test="teacherName != null" >
        teacher_name,
      </if>
      <if test="mid != null" >
        mid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="majorId != null" >
        #{majorId,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null" >
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="tpName != null" >
        #{tpName,jdbcType=VARCHAR},
      </if>
      <if test="tpScore != null" >
        #{tpScore,jdbcType=DOUBLE},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=DATE},
      </if>
      <if test="majorName != null" >
        #{majorName,jdbcType=VARCHAR},
      </if>
      <if test="teacherName != null" >
        #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="mid != null" >
        #{mid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tangzhe.cslg.entity.TestPaper" >
    update test_paper
    <set >
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="majorId != null" >
        major_id = #{majorId,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null" >
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="tpName != null" >
        tp_name = #{tpName,jdbcType=VARCHAR},
      </if>
      <if test="tpScore != null" >
        tp_score = #{tpScore,jdbcType=DOUBLE},
      </if>
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=DATE},
      </if>
      <if test="majorName != null" >
        major_name = #{majorName,jdbcType=VARCHAR},
      </if>
      <if test="teacherName != null" >
        teacher_name = #{teacherName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tangzhe.cslg.entity.TestPaper" >
    update test_paper
    set course_id = #{courseId,jdbcType=VARCHAR},
      major_id = #{majorId,jdbcType=VARCHAR},
      course_name = #{courseName,jdbcType=VARCHAR},
      tp_name = #{tpName,jdbcType=VARCHAR},
      tp_score = #{tpScore,jdbcType=DOUBLE},
      teacher_id = #{teacherId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE},
      state = #{state,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=DATE},
      major_name = #{majorName,jdbcType=VARCHAR},
      teacher_name = #{teacherName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="findCountByTeacherId" parameterType="string" resultType="java.lang.Integer">
    select count(*)
    from test_paper
    where teacher_id = #{teacherId}
  </select>

  <select id="findPageByTeacherId" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM test_paper
    where teacher_id = #{teacherId}
    LIMIT #{startRow}, #{pageSize}
  </select>

  <update id="updateStateById">
    update test_paper
    set state = #{state}
    where id = #{id}
  </update>

  <select id="findTestPaperByTeacherId" parameterType="string" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM test_paper
    WHERE teacher_id = #{teacherId}
  </select>

</mapper>